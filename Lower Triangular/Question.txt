Problem Statement:
Mia is a diligent student who is passionate about mathematics. She recently started learning about matrices and their properties. One day, she decided to write a program to explore the lower
triangular part of a NxN matrix.

Write a program that takes a square matrix as input and computes the sum of elements located below the main diagonal. The matrix is of size NxN, and the sum includes all elements in the 
lower triangular part (excluding the main diagonal).
Example
Input:
3
1 0 0
4 5 0
7 8 9

Output:

19

Explanation:
The lower triangular matrix elements are 4, 7, and 8. The sum is 4+7+8 = 19.

Input format :
The input consists of an integer N representing the size of the square matrix.
The next N lines consists of N integers, representing the elements of the matrix.
Output format :
The output displays a single integer representing the sum of elements in the lower triangular part of the matrix (excluding the main diagonal).

Refer to the sample output for the formatting specifications.

Code constraints :
In the given scenario, the test cases fall under the following constraints:

3 ≤ N ≤ 5

0 ≤ elements ≤ 100

Sample test cases :
Input 1 :
4
1 8 12 14
4 6 14 18
2 8 16 25
5 9 28 36
Output 1 :
56
Input 2 :
5
10 20 30 40 50
40 50 60 70 80
100 80 90 80 70
98 54 41 37 65
14 78 53 64 98
Output 2:
622
